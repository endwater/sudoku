bool valid_insert(const int input, const int board[][9], int c_row, int c_column) {
	for (int i = 1; i < 10; i++) {
		if (input == board[c_row][i-1]) return false;
	}
	for (int j = 1; j < 10; j++) {		
		if (input == board[j-1][c_column]) return false;
	}
	int rowD = c_row / 3; int columnD = c_column / 3;
	for (int k = rowD * 3; k < (rowD + 1) * 3; k++) {
		for (int x = columnD * 3; x < (columnD + 1) * 3; x++) {
			if (input == board[k][x]) return false;
		}
	}
	return true;
}
